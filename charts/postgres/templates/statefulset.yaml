apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ .Release.Name }}
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        domain: apps
    spec:
      affinity:
        nodeAffinity: {{ toYaml .Values.homeCloud.nodeAffinity | nindent 12 }}
      containers:
        - name: postgres
          image: 'tensorchord/pgvecto-rs:{{ .Chart.AppVersion }}'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password
            - name: POSTGRES_DB
              value: postgres
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
