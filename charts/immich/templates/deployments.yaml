apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: {{ .Release.Name }}
  labels:
    app: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
        domain: apps
    spec:
      affinity:
        nodeAffinity: {{ toYaml .Values.homeCloud.nodeAffinity | nindent 12 }}
      containers:
        - name: server
          image: 'ghcr.io/immich-app/immich-server:{{ .Chart.AppVersion }}'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2283
              name: http
          env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: postgres-immich
                  key: uri
            - name: REDIS_PORT
              value: "6379"
            - name: IMMICH_CONFIG_FILE
              value: /etc/immich.json
          livenessProbe:
            httpGet:
              path: /
              port: 2283
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 12
          readinessProbe:
            httpGet:
              path: /
              port: 2283
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 12
          volumeMounts:
            - name: data
              mountPath: /usr/src/app/upload
            - name: config
              mountPath: /etc/immich.json
              subPath: immich.json
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
        - name: config
          configMap:
            name: immich
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-learning
  namespace: {{ .Release.Name }}
  labels:
    app: machine-learning
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-learning
  template:
    metadata:
      labels:
        app: machine-learning
        domain: apps
    spec:
      affinity:
        nodeAffinity: {{ toYaml .Values.homeCloud.nodeAffinity | nindent 12 }}
      containers:
        - name: machine-learning
          image: 'ghcr.io/immich-app/immich-machine-learning:{{ .Chart.AppVersion }}'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3003
              name: http
          env:
            - name: MACHINE_LEARNING_PORT
              value: "3003"
          volumeMounts:
            - name: model-cache
              mountPath: /cache
      volumes:
        - name: model-cache
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-model-cache
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: {{ .Release.Name }}
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        domain: apps
    spec:
      affinity:
        nodeAffinity: {{ toYaml .Values.homeCloud.nodeAffinity | nindent 12 }}
      containers:
        - name: redis
          image: redis:6.2.5-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: redis
